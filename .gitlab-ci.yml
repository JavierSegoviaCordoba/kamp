image: gradle:6.5

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  APP_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_PIPELINE_ID
  SCANNER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE/scanner:$CI_PIPELINE_ID

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - publish
  - release

build:
  stage: build
  script:
    - gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - .gradle
      - build
      - app/build
      - scanner/build

app:test:
  stage: test
  script: gradle :app:check
  needs:
    - build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle

app:publish:
  stage: publish
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  needs:
    - build
    - app:test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd app
    - docker build --pull -t $APP_RELEASE_IMAGE .
    - docker push $APP_RELEASE_IMAGE
  artifacts:
    name: app
    paths:
      - app/build/libs/*-all.jar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle

app:release:
  stage: release
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  variables:
    TF_ROOT: $CI_PROJECT_DIR/infra
    TF_VAR_docker_registry_username: $CI_REGISTRY_USER
    TF_VAR_docker_registry_password: $CI_REGISTRY_PASSWORD
    TF_VAR_docker_image_tag: $APP_RELEASE_IMAGE
  needs:
    - app:publish
  only:
    - master
  script:
    - cd ${TF_ROOT}
    - gitlab-terraform init
    - gitlab-terraform apply
  environment:
    name: Azure App
    url: https://kamp.azurewebsites.net

scanner:test:
  stage: test
  script: gradle :scanner:check
  needs:
    - build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - scanner/build
      - .gradle

scanner:publish:
  stage: publish
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  needs:
    - build
    - scanner:test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd scanner
    - docker build --pull -t $SCANNER_RELEASE_IMAGE .
    - docker push $SCANNER_RELEASE_IMAGE
  artifacts:
    name: scanner
    paths:
      - scanner/build/libs/*-all.jar
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - scanner/build
      - .gradle
