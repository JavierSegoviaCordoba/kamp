image: gradle:6.5

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  APP_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  APP_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  SCANNER_TEST_IMAGE: $CI_REGISTRY_IMAGE-scanner:$CI_COMMIT_REF_SLUG
  SCANNER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE-scanner:latest

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - build
  - test
  - publish
  - release

build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - .gradle
      - build
      - app/build
      - scanner/build

app:test:
  stage: test
  script: gradle :app:check
  needs:
    - build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle

app:publish:
  stage: publish
  image: docker:19.03.12
  needs:
    - build
    - app:test
  before_script:
    - docker login -u $CI_JOB_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cd app
    - docker build --pull -t $APP_TEST_IMAGE .
    - docker push $APP_TEST_IMAGE
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle

app:release:
  stage: release
  image: docker:19.03.12
  needs:
    - app:publish
  only:
    - master
  before_script:
    - docker login -u $CI_JOB_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $APP_TEST_IMAGE
    - docker tag $APP_TEST_IMAGE $APP_RELEASE_IMAGE
    - docker push $APP_RELEASE_IMAGE

scanner:test:
  stage: test
  script: gradle :scanner:check
  needs:
    - build
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - scanner/build
      - .gradle

scanner:publish:
  stage: publish
  image: docker:19.03.12
  needs:
    - build
    - scanner:test
  before_script:
    - docker login -u $CI_JOB_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cd scanner
    - docker build --pull -t $SCANNER_TEST_IMAGE .
    - docker push $SCANNER_TEST_IMAGE
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - scanner/build
      - .gradle

scanner:release:
  stage: release
  image: docker:19.03.12
  needs:
    - scanner:publish
  only:
    - master
  before_script:
    - docker login -u $CI_JOB_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $SCANNER_TEST_IMAGE
    - docker tag $SCANNER_TEST_IMAGE $SCANNER_RELEASE_IMAGE
    - docker push $SCANNER_RELEASE_IMAGE
